/*
 * This file is generated by jOOQ.
*/
package com.graphql.example.db.data.tables;


import com.graphql.example.db.data.DefaultSchema;
import com.graphql.example.db.data.tables.records.SqliteStat1Record;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SqliteStat1 extends TableImpl<SqliteStat1Record> {

    private static final long serialVersionUID = 2038715219;

    /**
     * The reference instance of <code>sqlite_stat1</code>
     */
    public static final SqliteStat1 SQLITE_STAT1 = new SqliteStat1();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SqliteStat1Record> getRecordType() {
        return SqliteStat1Record.class;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<SqliteStat1Record, Object> TBL = createField("tbl", org.jooq.impl.DefaultDataType.getDefaultDataType(""), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<SqliteStat1Record, Object> IDX = createField("idx", org.jooq.impl.DefaultDataType.getDefaultDataType(""), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled.
     */
    @java.lang.Deprecated
    public final TableField<SqliteStat1Record, Object> STAT = createField("stat", org.jooq.impl.DefaultDataType.getDefaultDataType(""), this, "");

    /**
     * Create a <code>sqlite_stat1</code> table reference
     */
    public SqliteStat1() {
        this(DSL.name("sqlite_stat1"), null);
    }

    /**
     * Create an aliased <code>sqlite_stat1</code> table reference
     */
    public SqliteStat1(String alias) {
        this(DSL.name(alias), SQLITE_STAT1);
    }

    /**
     * Create an aliased <code>sqlite_stat1</code> table reference
     */
    public SqliteStat1(Name alias) {
        this(alias, SQLITE_STAT1);
    }

    private SqliteStat1(Name alias, Table<SqliteStat1Record> aliased) {
        this(alias, aliased, null);
    }

    private SqliteStat1(Name alias, Table<SqliteStat1Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqliteStat1 as(String alias) {
        return new SqliteStat1(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqliteStat1 as(Name alias) {
        return new SqliteStat1(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SqliteStat1 rename(String name) {
        return new SqliteStat1(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SqliteStat1 rename(Name name) {
        return new SqliteStat1(name, null);
    }
}
