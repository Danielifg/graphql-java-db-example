/*
 * This file is generated by jOOQ.
*/
package com.graphql.example.db.data.tables;


import com.graphql.example.db.data.DefaultSchema;
import com.graphql.example.db.data.Indexes;
import com.graphql.example.db.data.Keys;
import com.graphql.example.db.data.tables.records.InvoiceItemsRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoiceItems extends TableImpl<InvoiceItemsRecord> {

    private static final long serialVersionUID = 831657406;

    /**
     * The reference instance of <code>invoice_items</code>
     */
    public static final InvoiceItems INVOICE_ITEMS = new InvoiceItems();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InvoiceItemsRecord> getRecordType() {
        return InvoiceItemsRecord.class;
    }

    /**
     * The column <code>invoice_items.InvoiceLineId</code>.
     */
    public final TableField<InvoiceItemsRecord, Integer> INVOICELINEID = createField("InvoiceLineId", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>invoice_items.InvoiceId</code>.
     */
    public final TableField<InvoiceItemsRecord, Integer> INVOICEID = createField("InvoiceId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>invoice_items.TrackId</code>.
     */
    public final TableField<InvoiceItemsRecord, Integer> TRACKID = createField("TrackId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>invoice_items.UnitPrice</code>.
     */
    public final TableField<InvoiceItemsRecord, BigDecimal> UNITPRICE = createField("UnitPrice", org.jooq.impl.SQLDataType.NUMERIC(10, 2).nullable(false), this, "");

    /**
     * The column <code>invoice_items.Quantity</code>.
     */
    public final TableField<InvoiceItemsRecord, Integer> QUANTITY = createField("Quantity", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>invoice_items</code> table reference
     */
    public InvoiceItems() {
        this(DSL.name("invoice_items"), null);
    }

    /**
     * Create an aliased <code>invoice_items</code> table reference
     */
    public InvoiceItems(String alias) {
        this(DSL.name(alias), INVOICE_ITEMS);
    }

    /**
     * Create an aliased <code>invoice_items</code> table reference
     */
    public InvoiceItems(Name alias) {
        this(alias, INVOICE_ITEMS);
    }

    private InvoiceItems(Name alias, Table<InvoiceItemsRecord> aliased) {
        this(alias, aliased, null);
    }

    private InvoiceItems(Name alias, Table<InvoiceItemsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IFK_INVOICELINEINVOICEID, Indexes.IFK_INVOICELINETRACKID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<InvoiceItemsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_INVOICE_ITEMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InvoiceItemsRecord> getPrimaryKey() {
        return Keys.PK_INVOICE_ITEMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InvoiceItemsRecord>> getKeys() {
        return Arrays.<UniqueKey<InvoiceItemsRecord>>asList(Keys.PK_INVOICE_ITEMS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<InvoiceItemsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InvoiceItemsRecord, ?>>asList(Keys.FK_INVOICE_ITEMS_INVOICES_1, Keys.FK_INVOICE_ITEMS_TRACKS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoiceItems as(String alias) {
        return new InvoiceItems(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoiceItems as(Name alias) {
        return new InvoiceItems(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InvoiceItems rename(String name) {
        return new InvoiceItems(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InvoiceItems rename(Name name) {
        return new InvoiceItems(name, null);
    }
}
