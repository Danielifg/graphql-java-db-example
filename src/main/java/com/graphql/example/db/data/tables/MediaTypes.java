/*
 * This file is generated by jOOQ.
*/
package com.graphql.example.db.data.tables;


import com.graphql.example.db.data.DefaultSchema;
import com.graphql.example.db.data.Keys;
import com.graphql.example.db.data.tables.records.MediaTypesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MediaTypes extends TableImpl<MediaTypesRecord> {

    private static final long serialVersionUID = -1830756515;

    /**
     * The reference instance of <code>media_types</code>
     */
    public static final MediaTypes MEDIA_TYPES = new MediaTypes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MediaTypesRecord> getRecordType() {
        return MediaTypesRecord.class;
    }

    /**
     * The column <code>media_types.MediaTypeId</code>.
     */
    public final TableField<MediaTypesRecord, Integer> MEDIATYPEID = createField("MediaTypeId", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>media_types.Name</code>.
     */
    public final TableField<MediaTypesRecord, String> NAME = createField("Name", org.jooq.impl.SQLDataType.NVARCHAR(120), this, "");

    /**
     * Create a <code>media_types</code> table reference
     */
    public MediaTypes() {
        this(DSL.name("media_types"), null);
    }

    /**
     * Create an aliased <code>media_types</code> table reference
     */
    public MediaTypes(String alias) {
        this(DSL.name(alias), MEDIA_TYPES);
    }

    /**
     * Create an aliased <code>media_types</code> table reference
     */
    public MediaTypes(Name alias) {
        this(alias, MEDIA_TYPES);
    }

    private MediaTypes(Name alias, Table<MediaTypesRecord> aliased) {
        this(alias, aliased, null);
    }

    private MediaTypes(Name alias, Table<MediaTypesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MediaTypesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MEDIA_TYPES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MediaTypesRecord> getPrimaryKey() {
        return Keys.PK_MEDIA_TYPES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MediaTypesRecord>> getKeys() {
        return Arrays.<UniqueKey<MediaTypesRecord>>asList(Keys.PK_MEDIA_TYPES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MediaTypes as(String alias) {
        return new MediaTypes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MediaTypes as(Name alias) {
        return new MediaTypes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MediaTypes rename(String name) {
        return new MediaTypes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MediaTypes rename(Name name) {
        return new MediaTypes(name, null);
    }
}
